{"ast":null,"code":"import _createClass from \"/home/narek/Desktop/newStrategyGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _wrapNativeSuper from \"/home/narek/Desktop/newStrategyGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _inherits from \"/home/narek/Desktop/newStrategyGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/narek/Desktop/newStrategyGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/narek/Desktop/newStrategyGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar MilitaryUnit = function MilitaryUnit() {\n  _classCallCheck(this, MilitaryUnit);\n\n  this.id = ++MilitaryUnit.count;\n};\n\nMilitaryUnit.count = 0;\n\nvar PexotaBase = /*#__PURE__*/function (_MilitaryUnit) {\n  _inherits(PexotaBase, _MilitaryUnit);\n\n  var _super = _createSuper(PexotaBase);\n\n  function PexotaBase() {\n    _classCallCheck(this, PexotaBase);\n\n    return _super.apply(this, arguments);\n  }\n\n  return PexotaBase;\n}(MilitaryUnit); // 3\n\n\nvar KavaleriaBase = /*#__PURE__*/function (_MilitaryUnit2) {\n  _inherits(KavaleriaBase, _MilitaryUnit2);\n\n  var _super2 = _createSuper(KavaleriaBase);\n\n  function KavaleriaBase() {\n    _classCallCheck(this, KavaleriaBase);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return KavaleriaBase;\n}(MilitaryUnit); //5\n\n\nvar ArtileriaBase = /*#__PURE__*/function (_MilitaryUnit3) {\n  _inherits(ArtileriaBase, _MilitaryUnit3);\n\n  var _super3 = _createSuper(ArtileriaBase);\n\n  function ArtileriaBase() {\n    _classCallCheck(this, ArtileriaBase);\n\n    return _super3.apply(this, arguments);\n  }\n\n  return ArtileriaBase;\n}(MilitaryUnit); // 2\n\n\nvar NotFareGameException = /*#__PURE__*/function (_Error) {\n  _inherits(NotFareGameException, _Error);\n\n  var _super4 = _createSuper(NotFareGameException);\n\n  function NotFareGameException() {\n    _classCallCheck(this, NotFareGameException);\n\n    return _super4.call(this, \"This game is not fare!!!\");\n  }\n\n  return NotFareGameException;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar GameEngine = /*#__PURE__*/function () {\n  function GameEngine() {\n    _classCallCheck(this, GameEngine);\n\n    this._numberOfPexota = 3;\n    this._numberOfKavaleria = 5;\n    this._numberOfArtileria = 2;\n    this._registeredCountriesNames = [];\n    this._registeredCountriesUnitsFactory = [];\n    this._firstPlayerCountry = \"\";\n    this._secondPlayerCountry = \"\";\n    this.player1Pexotas = [];\n    this.player2Pexotas = [];\n    this.player1Kavalerias = [];\n    this.player2Kavalerias = [];\n    this.player1Artilerias = [];\n    this.player2Artilerias = [];\n  }\n\n  _createClass(GameEngine, [{\n    key: \"registerContry\",\n    value: function registerContry(countryUnitsFactory) {\n      this._registeredCountriesNames.push(countryUnitsFactory.country);\n\n      this._registeredCountriesUnitsFactory.push(countryUnitsFactory);\n    }\n  }, {\n    key: \"getCountries\",\n    value: function getCountries() {\n      return this._registeredCountriesNames;\n    }\n  }, {\n    key: \"setFirstPlayerCountry\",\n    value: function setFirstPlayerCountry(countryName) {\n      this._firstPlayerCountry = countryName;\n    }\n  }, {\n    key: \"setSecondPlayerCountry\",\n    value: function setSecondPlayerCountry(countryName) {\n      this._secondPlayerCountry = countryName;\n    }\n  }, {\n    key: \"_validateGame\",\n    value: function _validateGame() {\n      if (!this._firstPlayerCountry) {\n        throw new Error(\"For player1 no country selected\");\n      }\n\n      if (!this._secondPlayerCountry) {\n        throw new Error(\"For player2 no country selected\");\n      }\n\n      if (this.player1Pexotas.length !== this._numberOfPexota) {\n        throw new NotFareGameException();\n      }\n\n      if (this.player2Pexotas.length !== this._numberOfPexota) {\n        throw new NotFareGameException();\n      }\n\n      if (this.player1Kavalerias.length !== this._numberOfKavaleria) {\n        throw new NotFareGameException();\n      }\n\n      if (this.player2Kavalerias.length !== this._numberOfKavaleria) {\n        throw new NotFareGameException();\n      }\n\n      if (this.player1Artilerias.length !== this._numberOfArtileria) {\n        throw new NotFareGameException();\n      }\n\n      if (this.player2Artilerias.length !== this._numberOfArtileria) {\n        throw new NotFareGameException();\n      }\n    }\n  }, {\n    key: \"createUnits\",\n    value: function createUnits(pexotaArray, kavaleriaArray, artileriaArray, pexota, kavaleria, artileria) {\n      for (var i = 0; i < this._numberOfPexota; i++) {\n        pexotaArray.push(pexota);\n      }\n\n      for (var _i = 0; _i < this._numberOfKavaleria; _i++) {\n        kavaleriaArray.push(kavaleria);\n      }\n\n      for (var _i2 = 0; _i2 < this._numberOfArtileria; _i2++) {\n        artileriaArray.push(artileria);\n      }\n    }\n  }, {\n    key: \"createInitialUnits\",\n    value: function createInitialUnits() {\n      var player1UnitsFactory = this._registeredCountriesUnitsFactory[0];\n      var player2UnitsFactory = this._registeredCountriesUnitsFactory[1];\n      var isPlayer1UnitsFactoryEqualFirstCountry = player1UnitsFactory.country === this._firstPlayerCountry;\n      var isPlayer2UnitsFactoryEqualFirstCountry = player2UnitsFactory.country === this._secondPlayerCountry;\n\n      try {\n        if (isPlayer1UnitsFactoryEqualFirstCountry) {\n          createUnits();\n        }\n\n        if (isPlayer2UnitsFactoryEqualFirstCountry) {}\n      } catch (error) {\n        throw new Error(\"createInitialUnits is not implemented!!!\");\n      } // try {\n      //   for (let i = 0; i < this._numberOfPexota; i++) {\n      //     if (isPlayer1UnitsFactoryEqualFirstCountry) {\n      //       this.player1Pexotas.push(new player1UnitsFactory.pexota());\n      //     }\n      //     if (isPlayer2UnitsFactoryEqualFirstCountry) {\n      //       this.player2Pexotas.push(new player2UnitsFactory.pexota());\n      //     }\n      //   }\n      //   for (let i = 0; i < this._numberOfKavaleria; i++) {\n      //     if (isPlayer1UnitsFactoryEqualFirstCountry) {\n      //       this.player1Kavalerias.push(new player1UnitsFactory.kavaleria());\n      //     }\n      //     if (isPlayer2UnitsFactoryEqualFirstCountry) {\n      //       this.player2Kavalerias.push(new player2UnitsFactory.kavaleria());\n      //     }\n      //   }\n      //   for (let i = 0; i < this._numberOfArtileria; i++) {\n      //     if (isPlayer1UnitsFactoryEqualFirstCountry) {\n      //       this.player1Artilerias.push(new player1UnitsFactory.artileria());\n      //     }\n      //     if (isPlayer2UnitsFactoryEqualFirstCountry) {\n      //       this.player2Artilerias.push(new player2UnitsFactory.artileria());\n      //     }\n      //   }\n      // } catch (error) {\n      //   throw new Error(\"createInitialUnits is not implemented!!!\");\n      // }\n\n    }\n  }, {\n    key: \"startGame\",\n    value: function startGame() {\n      try {\n        console.log(\"GAME STARTED\");\n        console.log(\"-----------\".concat(this._firstPlayerCountry, \" VS \").concat(this._secondPlayerCountry, \"----------\"));\n        this.createInitialUnits();\n\n        this._validateGame();\n\n        console.log(\"GAME FINISHED\");\n      } catch (error) {\n        console.log(\"GAME FINISHED, because: \", error.message);\n      }\n    }\n  }]);\n\n  return GameEngine;\n}();\n\nvar gameEngine = new GameEngine();\nexport { gameEngine, PexotaBase, KavaleriaBase, ArtileriaBase };","map":{"version":3,"sources":["/home/narek/Desktop/newStrategyGame/src/coreTeam/gameEngine.js"],"names":["MilitaryUnit","id","count","PexotaBase","KavaleriaBase","ArtileriaBase","NotFareGameException","Error","GameEngine","_numberOfPexota","_numberOfKavaleria","_numberOfArtileria","_registeredCountriesNames","_registeredCountriesUnitsFactory","_firstPlayerCountry","_secondPlayerCountry","player1Pexotas","player2Pexotas","player1Kavalerias","player2Kavalerias","player1Artilerias","player2Artilerias","countryUnitsFactory","push","country","countryName","length","pexotaArray","kavaleriaArray","artileriaArray","pexota","kavaleria","artileria","i","player1UnitsFactory","player2UnitsFactory","isPlayer1UnitsFactoryEqualFirstCountry","isPlayer2UnitsFactoryEqualFirstCountry","createUnits","error","console","log","createInitialUnits","_validateGame","message","gameEngine"],"mappings":"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","sourcesContent":["class MilitaryUnit {\n  static count = 0;\n  constructor() {\n    this.id = ++MilitaryUnit.count;\n  }\n}\n\nclass PexotaBase extends MilitaryUnit {} // 3\n\nclass KavaleriaBase extends MilitaryUnit {} //5\n\nclass ArtileriaBase extends MilitaryUnit {} // 2\n\nclass NotFareGameException extends Error {\n  constructor() {\n    super(\"This game is not fare!!!\");\n  }\n}\n\nclass GameEngine {\n  constructor() {\n    this._numberOfPexota = 3;\n    this._numberOfKavaleria = 5;\n    this._numberOfArtileria = 2;\n\n    this._registeredCountriesNames = [];\n    this._registeredCountriesUnitsFactory = [];\n    this._firstPlayerCountry = \"\";\n    this._secondPlayerCountry = \"\";\n\n    this.player1Pexotas = [];\n    this.player2Pexotas = [];\n\n    this.player1Kavalerias = [];\n    this.player2Kavalerias = [];\n\n    this.player1Artilerias = [];\n    this.player2Artilerias = [];\n  }\n\n  registerContry(countryUnitsFactory) {\n    this._registeredCountriesNames.push(countryUnitsFactory.country);\n    this._registeredCountriesUnitsFactory.push(countryUnitsFactory);\n  }\n\n  getCountries() {\n    return this._registeredCountriesNames;\n  }\n\n  setFirstPlayerCountry(countryName) {\n    this._firstPlayerCountry = countryName;\n  }\n\n  setSecondPlayerCountry(countryName) {\n    this._secondPlayerCountry = countryName;\n  }\n\n  _validateGame() {\n    if (!this._firstPlayerCountry) {\n      throw new Error(\"For player1 no country selected\");\n    }\n\n    if (!this._secondPlayerCountry) {\n      throw new Error(\"For player2 no country selected\");\n    }\n\n    if (this.player1Pexotas.length !== this._numberOfPexota) {\n      throw new NotFareGameException();\n    }\n\n    if (this.player2Pexotas.length !== this._numberOfPexota) {\n      throw new NotFareGameException();\n    }\n\n    if (this.player1Kavalerias.length !== this._numberOfKavaleria) {\n      throw new NotFareGameException();\n    }\n\n    if (this.player2Kavalerias.length !== this._numberOfKavaleria) {\n      throw new NotFareGameException();\n    }\n\n    if (this.player1Artilerias.length !== this._numberOfArtileria) {\n      throw new NotFareGameException();\n    }\n\n    if (this.player2Artilerias.length !== this._numberOfArtileria) {\n      throw new NotFareGameException();\n    }\n  }\n\n  createUnits(\n    pexotaArray,\n    kavaleriaArray,\n    artileriaArray,\n    pexota,\n    kavaleria,\n    artileria\n  ) {\n    for (let i = 0; i < this._numberOfPexota; i++) {\n      pexotaArray.push(pexota);\n    }\n    for (let i = 0; i < this._numberOfKavaleria; i++) {\n      kavaleriaArray.push(kavaleria);\n    }\n    for (let i = 0; i < this._numberOfArtileria; i++) {\n      artileriaArray.push(artileria);\n    }\n  }\n\n  createInitialUnits() {\n    const player1UnitsFactory = this._registeredCountriesUnitsFactory[0];\n    const player2UnitsFactory = this._registeredCountriesUnitsFactory[1];\n\n    const isPlayer1UnitsFactoryEqualFirstCountry =\n      player1UnitsFactory.country === this._firstPlayerCountry;\n    const isPlayer2UnitsFactoryEqualFirstCountry =\n      player2UnitsFactory.country === this._secondPlayerCountry;\n    try {\n      if (isPlayer1UnitsFactoryEqualFirstCountry) {\n        createUnits();\n      }\n      if (isPlayer2UnitsFactoryEqualFirstCountry) {\n      }\n    } catch (error) {\n      throw new Error(\"createInitialUnits is not implemented!!!\");\n    }\n\n    // try {\n    //   for (let i = 0; i < this._numberOfPexota; i++) {\n    //     if (isPlayer1UnitsFactoryEqualFirstCountry) {\n    //       this.player1Pexotas.push(new player1UnitsFactory.pexota());\n    //     }\n    //     if (isPlayer2UnitsFactoryEqualFirstCountry) {\n    //       this.player2Pexotas.push(new player2UnitsFactory.pexota());\n    //     }\n    //   }\n\n    //   for (let i = 0; i < this._numberOfKavaleria; i++) {\n    //     if (isPlayer1UnitsFactoryEqualFirstCountry) {\n    //       this.player1Kavalerias.push(new player1UnitsFactory.kavaleria());\n    //     }\n    //     if (isPlayer2UnitsFactoryEqualFirstCountry) {\n    //       this.player2Kavalerias.push(new player2UnitsFactory.kavaleria());\n    //     }\n    //   }\n\n    //   for (let i = 0; i < this._numberOfArtileria; i++) {\n    //     if (isPlayer1UnitsFactoryEqualFirstCountry) {\n    //       this.player1Artilerias.push(new player1UnitsFactory.artileria());\n    //     }\n    //     if (isPlayer2UnitsFactoryEqualFirstCountry) {\n    //       this.player2Artilerias.push(new player2UnitsFactory.artileria());\n    //     }\n    //   }\n    // } catch (error) {\n    //   throw new Error(\"createInitialUnits is not implemented!!!\");\n    // }\n  }\n\n  startGame() {\n    try {\n      console.log(\"GAME STARTED\");\n      console.log(\n        `-----------${this._firstPlayerCountry} VS ${this._secondPlayerCountry}----------`\n      );\n      this.createInitialUnits();\n      this._validateGame();\n      console.log(\"GAME FINISHED\");\n    } catch (error) {\n      console.log(\"GAME FINISHED, because: \", error.message);\n    }\n  }\n}\n\nconst gameEngine = new GameEngine();\n\nexport { gameEngine, PexotaBase, KavaleriaBase, ArtileriaBase };\n"]},"metadata":{},"sourceType":"module"}